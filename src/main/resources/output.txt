resources path: generatedData\20250302_015831\generatedRatings.json

Ranked Alternatives (Descending h(Ai)):
1. Alternative 4 -> h(Ai): 0,64
2. Alternative 1 -> h(Ai): 0,61
3. Alternative 3 -> h(Ai): 0,47
4. Alternative 2 -> h(Ai): 0,40
5. Alternative 5 -> h(Ai): 0,35

----------------------------------------------------------------

resources path: generatedRatings.json

Ranked Alternatives (Descending h(Ai)):
1. Alternative 2 -> h(Ai): 0,77
2. Alternative 5 -> h(Ai): 0,43
3. Alternative 3 -> h(Ai): 0,39
4. Alternative 4 -> h(Ai): 0,38
5. Alternative 1 -> h(Ai): 0,37

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

----------------------------------------------------------------

Ranked Alternatives (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

----------------------------------------------------------------

resources path: generatedRatings.json

Ranked Alternatives (Descending h(Ai)):
1. Alternative 2 -> h(Ai): 0,77
2. Alternative 5 -> h(Ai): 0,43
3. Alternative 3 -> h(Ai): 0,39
4. Alternative 4 -> h(Ai): 0,38
5. Alternative 1 -> h(Ai): 0,37

----------------------------------------------------------------

resources path: generatedRatings.json

Ranked Alternatives (Descending h(Ai)):
1. Alternative 2 -> h(Ai): 0,77
2. Alternative 5 -> h(Ai): 0,43
3. Alternative 3 -> h(Ai): 0,39
4. Alternative 4 -> h(Ai): 0,38
5. Alternative 1 -> h(Ai): 0,37

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives (Descending h(Ai)):

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives for Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives for Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: generatedData\20250302_020502\generatedRatings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 2 -> h(Ai): 0,55
2. Alternative 3 -> h(Ai): 0,52
3. Alternative 5 -> h(Ai): 0,50
4. Alternative 1 -> h(Ai): 0,46
5. Alternative 4 -> h(Ai): 0,45

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives for Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives for Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives for Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives for Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives for Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives for Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: illustrativeExample/ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,60
2. Golang -> h(Ai): 0,40
3. Rust -> h(Ai): 0,33

----------------------------------------------------------------

resources path: illustrativeExample/ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,60
2. Golang -> h(Ai): 0,40
3. Rust -> h(Ai): 0,33

----------------------------------------------------------------

resources path: illustrativeExample/ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Golang -> h(Ai): NaN
2. Rust -> h(Ai): NaN
3. Python -> h(Ai): NaN

----------------------------------------------------------------

resources path: illustrativeExample/ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Golang -> h(Ai): NaN
2. Rust -> h(Ai): NaN
3. Python -> h(Ai): NaN

----------------------------------------------------------------

resources path: illustrativeExample/ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,55
2. Golang -> h(Ai): 0,49
3. Rust -> h(Ai): 0,35

----------------------------------------------------------------

resources path: illustrativeExample/ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,55
2. Golang -> h(Ai): 0,49
3. Rust -> h(Ai): 0,35

----------------------------------------------------------------

resources path: illustrativeExample/ratings_2.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Golang -> h(Ai): 0,55
2. Rust -> h(Ai): 0,52
3. Python -> h(Ai): 0,42

----------------------------------------------------------------

resources path: illustrativeExample/2ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,72
2. C++ -> h(Ai): 0,63
3. Golang -> h(Ai): 0,60
4. Rust -> h(Ai): 0,37
5. java -> h(Ai): 0,29

----------------------------------------------------------------

resources path: illustrativeExample/ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,55
2. Golang -> h(Ai): 0,49
3. Rust -> h(Ai): 0,35

----------------------------------------------------------------

resources path: illustrativeExample/ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,55
2. Golang -> h(Ai): 0,49
3. Rust -> h(Ai): 0,35

----------------------------------------------------------------

resources path: illustrativeExample/ratings_2.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Golang -> h(Ai): 0,55
2. Rust -> h(Ai): 0,52
3. Python -> h(Ai): 0,42

----------------------------------------------------------------

resources path: illustrativeExample/3ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,84
2. Golang -> h(Ai): 0,63
3. C++ -> h(Ai): 0,62
4. Rust -> h(Ai): 0,44
5. java -> h(Ai): 0,00

----------------------------------------------------------------

resources path: illustrativeExample/4ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. C++ -> h(Ai): 0,57
2. Java -> h(Ai): 0,57
3. JavaScript -> h(Ai): 0,51
4. Rust -> h(Ai): 0,50
5. Python -> h(Ai): 0,46
6. C# -> h(Ai): 0,35
7. Go -> h(Ai): 0,30

----------------------------------------------------------------

resources path: illustrativeExample/4ratings_2.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Rust -> h(Ai): 0,66
2. Java -> h(Ai): 0,63
3. Python -> h(Ai): 0,63
4. JavaScript -> h(Ai): 0,44
5. C# -> h(Ai): 0,42
6. C++ -> h(Ai): 0,40
7. Go -> h(Ai): 0,37

----------------------------------------------------------------

resources path: illustrativeExample/4ratings_2.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Rust -> h(Ai): 0,66
2. Java -> h(Ai): 0,65
3. Python -> h(Ai): 0,64
4. JavaScript -> h(Ai): 0,42
5. C# -> h(Ai): 0,42
6. C++ -> h(Ai): 0,37
7. Go -> h(Ai): 0,35

----------------------------------------------------------------

resources path: illustrativeExample/4ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,61
2. Go -> h(Ai): 0,57
3. Rust -> h(Ai): 0,50
4. C++ -> h(Ai): 0,48
5. Java -> h(Ai): 0,41
6. C# -> h(Ai): 0,34
7. JavaScript -> h(Ai): 0,32

----------------------------------------------------------------

resources path: illustrativeExample/4ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,57
2. Go -> h(Ai): 0,57
3. Rust -> h(Ai): 0,51
4. C++ -> h(Ai): 0,50
5. Java -> h(Ai): 0,46
6. C# -> h(Ai): 0,35
7. JavaScript -> h(Ai): 0,30

----------------------------------------------------------------

resources path: illustrativeExample/4ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,81
2. Go -> h(Ai): 0,63
3. Rust -> h(Ai): 0,51
4. Java -> h(Ai): 0,23
5. C++ -> h(Ai): 0,22
6. C# -> h(Ai): 0,20
7. JavaScript -> h(Ai): 0,13

----------------------------------------------------------------

resources path: illustrativeExample/4ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,83
2. Go -> h(Ai): 0,72
3. Rust -> h(Ai): 0,64
4. JavaScript -> h(Ai): 0,36
5. C++ -> h(Ai): 0,33
6. C# -> h(Ai): 0,19
7. Java -> h(Ai): 0,07

----------------------------------------------------------------

resources path: illustrativeExample/4ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,84
2. Go -> h(Ai): 0,74
3. Rust -> h(Ai): 0,68
4. JavaScript -> h(Ai): 0,43
5. C++ -> h(Ai): 0,40
6. Java -> h(Ai): 0,17
7. C# -> h(Ai): 0,14

----------------------------------------------------------------

resources path: illustrativeExample/4ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,86
2. Go -> h(Ai): 0,78
3. Rust -> h(Ai): 0,74
4. C++ -> h(Ai): 0,51
5. Java -> h(Ai): 0,30
6. C# -> h(Ai): 0,25
7. JavaScript -> h(Ai): 0,00

----------------------------------------------------------------

resources path: illustrativeExample/4ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,86
2. Go -> h(Ai): 0,77
3. Rust -> h(Ai): 0,73
4. C++ -> h(Ai): 0,49
5. Java -> h(Ai): 0,27
6. C# -> h(Ai): 0,22
7. JavaScript -> h(Ai): 0,00

----------------------------------------------------------------

resources path: illustrativeExample/4ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,85
2. Go -> h(Ai): 0,77
3. Rust -> h(Ai): 0,72
4. C++ -> h(Ai): 0,47
5. Java -> h(Ai): 0,25
6. C# -> h(Ai): 0,21
7. JavaScript -> h(Ai): 0,15

----------------------------------------------------------------

resources path: illustrativeExample/4ratings_2.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Rust -> h(Ai): 0,66
2. Java -> h(Ai): 0,63
3. Python -> h(Ai): 0,63
4. JavaScript -> h(Ai): 0,44
5. C# -> h(Ai): 0,42
6. C++ -> h(Ai): 0,40
7. Go -> h(Ai): 0,37

----------------------------------------------------------------

resources path: illustrativeExample/1ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,85
2. Go -> h(Ai): 0,77
3. Rust -> h(Ai): 0,72
4. C++ -> h(Ai): 0,47
5. Java -> h(Ai): 0,25
6. C# -> h(Ai): 0,21
7. JavaScript -> h(Ai): 0,15

----------------------------------------------------------------

resources path: illustrativeExample/2ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,72
2. C++ -> h(Ai): 0,63
3. Golang -> h(Ai): 0,60
4. Rust -> h(Ai): 0,37
5. java -> h(Ai): 0,29

----------------------------------------------------------------

resources path: illustrativeExample/2ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,72
2. C++ -> h(Ai): 0,63
3. Go -> h(Ai): 0,60
4. Rust -> h(Ai): 0,37
5. Java -> h(Ai): 0,29

----------------------------------------------------------------

resources path: illustrativeExample/3ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,84
2. Golang -> h(Ai): 0,63
3. C++ -> h(Ai): 0,62
4. Rust -> h(Ai): 0,44
5. java -> h(Ai): 0,00

----------------------------------------------------------------

resources path: illustrativeExample/2ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,72
2. C++ -> h(Ai): 0,63
3. Go -> h(Ai): 0,60
4. Rust -> h(Ai): 0,37
5. Java -> h(Ai): 0,29

----------------------------------------------------------------

resources path: illustrativeExample/2ratings_2.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,72
2. C++ -> h(Ai): 0,63
3. Go -> h(Ai): 0,60
4. Rust -> h(Ai): 0,37
5. Java -> h(Ai): 0,29

----------------------------------------------------------------

resources path: illustrativeExample/2ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,84
2. Golang -> h(Ai): 0,63
3. C++ -> h(Ai): 0,62
4. Rust -> h(Ai): 0,44
5. java -> h(Ai): 0,00

----------------------------------------------------------------

resources path: illustrativeExample/2ratings_2.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,72
2. C++ -> h(Ai): 0,63
3. Go -> h(Ai): 0,60
4. Rust -> h(Ai): 0,37
5. Java -> h(Ai): 0,29

----------------------------------------------------------------

resources path: illustrativeExample/2ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,84
2. Golang -> h(Ai): 0,63
3. C++ -> h(Ai): 0,62
4. Rust -> h(Ai): 0,44
5. java -> h(Ai): 0,00

----------------------------------------------------------------

resources path: illustrativeExample/2ratings_2.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,72
2. C++ -> h(Ai): 0,63
3. Go -> h(Ai): 0,60
4. Rust -> h(Ai): 0,37
5. Java -> h(Ai): 0,29

----------------------------------------------------------------

resources path: illustrativeExample/2ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,84
2. Golang -> h(Ai): 0,63
3. C++ -> h(Ai): 0,62
4. Rust -> h(Ai): 0,44
5. java -> h(Ai): 0,00

----------------------------------------------------------------

resources path: illustrativeExample/2ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,84
2. Go -> h(Ai): 0,63
3. C++ -> h(Ai): 0,62
4. Rust -> h(Ai): 0,44
5. Java -> h(Ai): 0,00

----------------------------------------------------------------

resources path: illustrativeExample/2ratings_2.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,72
2. C++ -> h(Ai): 0,63
3. Go -> h(Ai): 0,60
4. Rust -> h(Ai): 0,37
5. Java -> h(Ai): 0,29

----------------------------------------------------------------

resources path: illustrativeExample/1ratings_2.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Rust -> h(Ai): 0,66
2. Java -> h(Ai): 0,63
3. Python -> h(Ai): 0,63
4. JavaScript -> h(Ai): 0,44
5. C# -> h(Ai): 0,42
6. C++ -> h(Ai): 0,40
7. Go -> h(Ai): 0,37

----------------------------------------------------------------

resources path: illustrativeExample/3ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,55
2. Go -> h(Ai): 0,49
3. Rust -> h(Ai): 0,35

----------------------------------------------------------------

resources path: illustrativeExample/3ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,55
2. Go -> h(Ai): 0,49
3. Rust -> h(Ai): 0,35

----------------------------------------------------------------

resources path: illustrativeExample/3ratings_2.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Go -> h(Ai): 0,55
2. Rust -> h(Ai): 0,52
3. Python -> h(Ai): 0,42

----------------------------------------------------------------

resources path: illustrativeExample/3ratings_2.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. C++ -> h(Ai): 0,66
2. Python -> h(Ai): 0,56
3. Go -> h(Ai): 0,53
4. Rust -> h(Ai): 0,37
5. Java -> h(Ai): 0,24

----------------------------------------------------------------

resources path: illustrativeExample/3ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,72
2. C++ -> h(Ai): 0,63
3. Go -> h(Ai): 0,60
4. Rust -> h(Ai): 0,37
5. Java -> h(Ai): 0,29

----------------------------------------------------------------

resources path: illustrativeExample/3ratings_2.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. C++ -> h(Ai): 0,66
2. Python -> h(Ai): 0,56
3. Go -> h(Ai): 0,53
4. Rust -> h(Ai): 0,37
5. Java -> h(Ai): 0,24

----------------------------------------------------------------

resources path: illustrativeExample/3ratings_2.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. C++ -> h(Ai): 0,66
2. Python -> h(Ai): 0,56
3. Go -> h(Ai): 0,53
4. Rust -> h(Ai): 0,37
5. Java -> h(Ai): 0,24

----------------------------------------------------------------

resources path: illustrativeExample/4ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,84
2. Go -> h(Ai): 0,63
3. C++ -> h(Ai): 0,62
4. Rust -> h(Ai): 0,44
5. Java -> h(Ai): 0,00

----------------------------------------------------------------

resources path: illustrativeExample/4ratings_2.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,63
2. C++ -> h(Ai): 0,61
3. Go -> h(Ai): 0,55
4. Rust -> h(Ai): 0,42
5. Java -> h(Ai): 0,31

----------------------------------------------------------------

resources path: illustrativeExample/4ratings_2.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,63
2. C++ -> h(Ai): 0,61
3. Go -> h(Ai): 0,55
4. Rust -> h(Ai): 0,42
5. Java -> h(Ai): 0,31

----------------------------------------------------------------

resources path: illustrativeExample/4ratings.json

----------------------------------------------------------------

resources path: illustrativeExample/4ratings.json

----------------------------------------------------------------

resources path: illustrativeExample/4ratings.json

----------------------------------------------------------------

resources path: illustrativeExample/1ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,85
2. Go -> h(Ai): 0,77
3. Rust -> h(Ai): 0,72
4. C++ -> h(Ai): 0,47
5. Java -> h(Ai): 0,25
6. C# -> h(Ai): 0,21
7. JavaScript -> h(Ai): 0,15

----------------------------------------------------------------

resources path: illustrativeExample/4ratings.json

----------------------------------------------------------------

resources path: illustrativeExample/4ratings.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,85
2. Go -> h(Ai): 0,60
3. C++ -> h(Ai): 0,60
4. Rust -> h(Ai): 0,43
5. Java -> h(Ai): 0,00

----------------------------------------------------------------

resources path: illustrativeExample/4ratings_2.json

Ranked Alternatives for Выбор стека для разработки системы технического зрения (Descending h(Ai)):
1. Python -> h(Ai): 0,63
2. C++ -> h(Ai): 0,61
3. Go -> h(Ai): 0,55
4. Rust -> h(Ai): 0,42
5. Java -> h(Ai): 0,31

----------------------------------------------------------------

resources path: verbalRatings.json

----------------------------------------------------------------

resources path: verbalRatings.json

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,59
2. Alternative 8 -> h(Ai): 0,53
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 7 -> h(Ai): 0,47
6. Alternative 5 -> h(Ai): 0,47
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 3 -> h(Ai): 0,42
9. Alternative 4 -> h(Ai): 0,37

----------------------------------------------------------------

resources path: verbalRatings.json

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,59
2. Alternative 8 -> h(Ai): 0,53
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 7 -> h(Ai): 0,47
6. Alternative 5 -> h(Ai): 0,47
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 3 -> h(Ai): 0,42
9. Alternative 4 -> h(Ai): 0,37

----------------------------------------------------------------

resources path: verbalRatings.json

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,59
2. Alternative 8 -> h(Ai): 0,53
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 7 -> h(Ai): 0,47
6. Alternative 5 -> h(Ai): 0,47
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 3 -> h(Ai): 0,42
9. Alternative 4 -> h(Ai): 0,37

----------------------------------------------------------------

resources path: verbalRatings.json

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,59
2. Alternative 8 -> h(Ai): 0,53
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 7 -> h(Ai): 0,47
6. Alternative 5 -> h(Ai): 0,47
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 3 -> h(Ai): 0,42
9. Alternative 4 -> h(Ai): 0,37

----------------------------------------------------------------

resources path: verbalRatings.json

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,59
2. Alternative 8 -> h(Ai): 0,53
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 7 -> h(Ai): 0,47
6. Alternative 5 -> h(Ai): 0,47
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 3 -> h(Ai): 0,42
9. Alternative 4 -> h(Ai): 0,37

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives for Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives for Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives for Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: generatedData\20250302_013406\generatedRatings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,76
2. Alternative 5 -> h(Ai): 0,46
3. Alternative 4 -> h(Ai): 0,44
4. Alternative 2 -> h(Ai): 0,43
5. Alternative 1 -> h(Ai): 0,27

----------------------------------------------------------------

resources path: generatedData\20250331_002848\generatedRatings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 5 -> h(Ai): 0,54
2. Alternative 2 -> h(Ai): 0,47
3. Alternative 4 -> h(Ai): 0,45
4. Alternative 3 -> h(Ai): 0,35
5. Alternative 1 -> h(Ai): 0,32

----------------------------------------------------------------

resources path: generatedData\20250602_045207\generatedRatings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 2 -> h(Ai): 0,66
2. Alternative 4 -> h(Ai): 0,57
3. Alternative 1 -> h(Ai): 0,52
4. Alternative 5 -> h(Ai): 0,47
5. Alternative 3 -> h(Ai): 0,43

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives for Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives for Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives for Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: cases/matchingRating.json

Ranked Alternatives for На каком этапе должен выполняться матчинг данных документа с каталогами поставщика в процессе его подготовки и отправки? (Descending h(Ai)):
1. При создании черновика -> h(Ai): 0,63
2. При каждом редактировании и сохранении черновика -> h(Ai): 0,47
3. При отправке документа -> h(Ai): 0,40

----------------------------------------------------------------

resources path: cases/matchingRating.json

Ranked Alternatives for На каком этапе должен выполняться матчинг данных документа с каталогами поставщика в процессе его подготовки и отправки? (Descending h(Ai)):
1. При создании черновика -> h(Ai): 0,52
2. При отправке документа -> h(Ai): 0,50
3. При каждом редактировании и сохранении черновика -> h(Ai): 0,45

----------------------------------------------------------------

resources path: cases/matchingRating.json

Ranked Alternatives for На каком этапе должен выполняться матчинг данных документа с каталогами поставщика в процессе его подготовки и отправки? (Descending h(Ai)):
1. При создании черновика -> h(Ai): 0,52
2. При отправке документа -> h(Ai): 0,50
3. При каждом редактировании и сохранении черновика -> h(Ai): 0,45

----------------------------------------------------------------

resources path: cases/dbirdRatings.json

Ranked Alternatives for От каких проектов наследовать проект DocsBird? (Descending h(Ai)):
1. От BLT -> h(Ai): 0,70
2. От ядра -> h(Ai): 0,62
3. От Ediweb -> h(Ai): 0,62
4. Не наследовать -> h(Ai): 0,35

----------------------------------------------------------------

resources path: cases/dbirdRatings.json

Ranked Alternatives for От каких проектов наследовать проект DocsBird? (Descending h(Ai)):
1. От BLT -> h(Ai): 0,72
2. От ядра -> h(Ai): 0,60
3. От Ediweb -> h(Ai): 0,54
4. Не наследовать -> h(Ai): 0,30

----------------------------------------------------------------

resources path: cases/testingRatings.json

Ranked Alternatives for Как упростить тестирование проектов? (Descending h(Ai)):

----------------------------------------------------------------

resources path: cases/testingRatings.json

Ranked Alternatives for Как упростить тестирование проектов? (Descending h(Ai)):

----------------------------------------------------------------

resources path: cases/testingRatings.json

Ranked Alternatives for Как упростить тестирование проектов (Descending h(Ai)):
1. Добавление дата-атрибутов для компонентов UIKit -> h(Ai): 0,86
2. Добавление классов для компонентов UIKit -> h(Ai): 0,80
3. Добавление специальных меток (полных путей с иерархией) в коде (классы/атрибуты) на конкретных формах -> h(Ai): 0,14

----------------------------------------------------------------

resources path: cases/testingRatings.json

Ranked Alternatives for Как упростить тестирование проектов (Descending h(Ai)):
1. Добавление дата-атрибутов для компонентов UIKit -> h(Ai): 0,86
2. Добавление классов для компонентов UIKit -> h(Ai): 0,80
3. Добавление специальных меток (полных путей с иерархией) в коде (классы/атрибуты) на конкретных формах -> h(Ai): 0,14

----------------------------------------------------------------

resources path: cases/dbirdRatings.json

Ranked Alternatives for От каких проектов наследовать проект DocsBird? (Descending h(Ai)):
1. От BLT -> h(Ai): 0,72
2. От ядра -> h(Ai): 0,60
3. От Ediweb -> h(Ai): 0,54
4. Не наследовать -> h(Ai): 0,30

----------------------------------------------------------------

resources path: cases/dbirdRatings.json

Ranked Alternatives for От каких проектов наследовать проект DocsBird? (Descending h(Ai)):
1. От BLT -> h(Ai): 0,72
2. От ядра -> h(Ai): 0,60
3. От Ediweb -> h(Ai): 0,54
4. Не наследовать -> h(Ai): 0,30

----------------------------------------------------------------

resources path: cases/dbirdRatings.json

Ranked Alternatives for От каких проектов наследовать проект DocsBird? (Descending h(Ai)):
1. От BLT -> h(Ai): 0,72
2. От ядра -> h(Ai): 0,60
3. От Ediweb -> h(Ai): 0,54
4. Не наследовать -> h(Ai): 0,30

----------------------------------------------------------------

resources path: cases/dbirdRatings.json

Ranked Alternatives for От каких проектов наследовать проект DocsBird? (Descending h(Ai)):
1. От BLT -> h(Ai): 0,72
2. От ядра -> h(Ai): 0,60
3. От Ediweb -> h(Ai): 0,54
4. Не наследовать -> h(Ai): 0,30

----------------------------------------------------------------

resources path: cases/dbirdRatings.json

Ranked Alternatives for От каких проектов наследовать проект DocsBird? (Descending h(Ai)):
1. От BLT -> h(Ai): 0,72
2. От ядра -> h(Ai): 0,60
3. От Ediweb -> h(Ai): 0,54
4. Не наследовать -> h(Ai): 0,30

----------------------------------------------------------------

resources path: cases/danonRatings.json

Ranked Alternatives for Стоит ли выделять отдельную ветку danon от ветки ediweb (Descending h(Ai)):
1. Вынесение danon в отдельную ветку -> h(Ai): 1,00
2. Работа в ветке ediweb -> h(Ai): 0,00

----------------------------------------------------------------

resources path: cases/danonRatings.json

Ranked Alternatives for Стоит ли выделять отдельную ветку danon от ветки ediweb (Descending h(Ai)):
1. Вынесение danon в отдельную ветку -> h(Ai): 1,00
2. Работа в ветке ediweb -> h(Ai): 0,00

----------------------------------------------------------------

resources path: cases/bltRatings.json

Ranked Alternatives for Как писать UIKit на BLT (Descending h(Ai)):
1. Наследовать UIKit -> h(Ai): 0,71
2. Использовать UIKit ядра -> h(Ai): 0,63
3. Наследовать UIKit  -> h(Ai): 0,60
4. Писать отдельный UIKit проекта -> h(Ai): 0,37

----------------------------------------------------------------

resources path: cases/bltRatings.json

Ranked Alternatives for Как писать UIKit на BLT (Descending h(Ai)):
1. Наследовать UIKit  -> h(Ai): 0,70
2. Использовать UIKit ядра -> h(Ai): 0,63
3. Наследовать UIKit -> h(Ai): 0,53
4. Писать отдельный UIKit проекта -> h(Ai): 0,37

----------------------------------------------------------------

resources path: cases/bltRatings.json

Ranked Alternatives for Как писать UIKit на BLT (Descending h(Ai)):
1. Использовать UIKit ядра -> h(Ai): 0,63
2. Наследовать UIKit -> h(Ai): 0,63
3. Писать отдельный UIKit проекта -> h(Ai): 0,37

----------------------------------------------------------------

resources path: cases/bltRatings.json

Ranked Alternatives for Как писать UIKit на BLT (Descending h(Ai)):
1. Использовать UIKit ядра -> h(Ai): 0,63
2. Наследовать UIKit -> h(Ai): 0,63
3. Писать отдельный UIKit проекта -> h(Ai): 0,37

----------------------------------------------------------------

resources path: cases/dbirdRatings.json

Ranked Alternatives for От каких проектов наследовать проект DocsBird? (Descending h(Ai)):
1. От BLT -> h(Ai): 0,75
2. От Ediweb -> h(Ai): 0,58
3. От ядра -> h(Ai): 0,56
4. Не наследовать -> h(Ai): 0,29

----------------------------------------------------------------

resources path: cases/dbirdRatings.json

Ranked Alternatives for От каких проектов наследовать проект DocsBird? (Descending h(Ai)):
1. От BLT -> h(Ai): 0,75
2. От Ediweb -> h(Ai): 0,58
3. От ядра -> h(Ai): 0,56
4. Не наследовать -> h(Ai): 0,29

----------------------------------------------------------------

resources path: cases/dbirdRatings.json

Ranked Alternatives for От каких проектов наследовать проект DocsBird? (Descending h(Ai)):
1. От BLT -> h(Ai): 0,75
2. От Ediweb -> h(Ai): 0,58
3. От ядра -> h(Ai): 0,56
4. Не наследовать -> h(Ai): 0,29

----------------------------------------------------------------

resources path: cases/dbirdRatings.json

Ranked Alternatives for От каких проектов наследовать проект DocsBird? (Descending h(Ai)):
1. От BLT -> h(Ai): 0,75
2. От Ediweb -> h(Ai): 0,58
3. От ядра -> h(Ai): 0,56
4. Не наследовать -> h(Ai): 0,29

----------------------------------------------------------------

resources path: cases/matchingRatings.json

Ranked Alternatives for На каком этапе должен выполняться матчинг данных документа с каталогами поставщика в процессе его подготовки и отправки? (Descending h(Ai)):
1. При создании черновика -> h(Ai): 0,52
2. При отправке документа -> h(Ai): 0,50
3. При каждом редактировании и сохранении черновика -> h(Ai): 0,45

----------------------------------------------------------------

resources path: cases/danonRatings.json

Ranked Alternatives for Стоит ли выделять отдельную ветку danon от ветки ediweb (Descending h(Ai)):
1. Вынесение danon в отдельную ветку -> h(Ai): 1,00
2. Работа в ветке ediweb -> h(Ai): 0,00

----------------------------------------------------------------

resources path: cases/testingRatings.json

Ranked Alternatives for Как упростить тестирование проектов (Descending h(Ai)):
1. Добавление дата-атрибутов для компонентов UIKit -> h(Ai): 0,87
2. Добавление классов для компонентов UIKit -> h(Ai): 0,75
3. Добавление специальных меток (полных путей с иерархией) в коде (классы/атрибуты) на конкретных формах -> h(Ai): 0,20

----------------------------------------------------------------

resources path: cases/bltRatings.json

Ranked Alternatives for Как писать UIKit на BLT (Descending h(Ai)):
1. Использовать UIKit ядра -> h(Ai): 0,63
2. Наследовать UIKit -> h(Ai): 0,63
3. Писать отдельный UIKit проекта -> h(Ai): 0,37

----------------------------------------------------------------

resources path: cases/bltRatings.json

Ranked Alternatives for Как писать UIKit на BLT (Descending h(Ai)):
1. Наследовать UIKit -> h(Ai): 0,69
2. Использовать UIKit ядра -> h(Ai): 0,63
3. Писать отдельный UIKit проекта -> h(Ai): 0,37

----------------------------------------------------------------

resources path: cases/bltRatings.json

Ranked Alternatives for Как писать UIKit на BLT (Descending h(Ai)):
1. Наследовать UIKit -> h(Ai): 0,68
2. Использовать UIKit ядра -> h(Ai): 0,62
3. Писать отдельный UIKit проекта -> h(Ai): 0,38

----------------------------------------------------------------

resources path: cases/matchingRatings.json

Ranked Alternatives for На каком этапе должен выполняться матчинг данных документа с каталогами поставщика в процессе его подготовки и отправки? (Descending h(Ai)):
1. При создании черновика -> h(Ai): 0,52
2. При отправке документа -> h(Ai): 0,50
3. При каждом редактировании и сохранении черновика -> h(Ai): 0,45

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives for Problem 3 (Descending h(Ai)):

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives for Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives for Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,57
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,67
2. Alternative 8 -> h(Ai): 0,56
3. Alternative 9 -> h(Ai): 0,52
4. Alternative 2 -> h(Ai): 0,51
5. Alternative 5 -> h(Ai): 0,49
6. Alternative 7 -> h(Ai): 0,48
7. Alternative 6 -> h(Ai): 0,46
8. Alternative 3 -> h(Ai): 0,42
9. Alternative 4 -> h(Ai): 0,33

Ranked Alternatives for Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: ratings.json

Ranked Alternatives for Problem 1 (Descending h(Ai)):
1. Alternative 3 -> h(Ai): 0,77
2. Alternative 1 -> h(Ai): 0,69
3. Alternative 4 -> h(Ai): 0,66
4. Alternative 2 -> h(Ai): 0,31

Ranked Alternatives for Problem 2 (Descending h(Ai)):
1. Alternative 1 -> h(Ai): 0,65
2. Alternative 8 -> h(Ai): 0,55
3. Alternative 9 -> h(Ai): 0,51
4. Alternative 2 -> h(Ai): 0,49
5. Alternative 5 -> h(Ai): 0,47
6. Alternative 7 -> h(Ai): 0,46
7. Alternative 6 -> h(Ai): 0,43
8. Alternative 4 -> h(Ai): 0,42
9. Alternative 3 -> h(Ai): 0,40

Ranked Alternatives for Problem 3 (Descending h(Ai)):

----------------------------------------------------------------

resources path: cases/matchingRatings.json

Ranked Alternatives for На каком этапе должен выполняться матчинг данных документа с каталогами поставщика в процессе его подготовки и отправки? (Descending h(Ai)):
1. При создании черновика -> h(Ai): 0,52
2. При отправке документа -> h(Ai): 0,50
3. При каждом редактировании и сохранении черновика -> h(Ai): 0,45

----------------------------------------------------------------

resources path: cases/dbirdRatings.json

Ranked Alternatives for От каких проектов наследовать проект DocsBird? (Descending h(Ai)):
1. От BLT -> h(Ai): 0,75
2. От Ediweb -> h(Ai): 0,58
3. От ядра -> h(Ai): 0,56
4. Не наследовать -> h(Ai): 0,29

----------------------------------------------------------------

resources path: cases/bltRatings.json

Ranked Alternatives for Как писать UIKit на BLT (Descending h(Ai)):
1. Наследовать UIKit -> h(Ai): 0,68
2. Использовать UIKit ядра -> h(Ai): 0,62
3. Писать отдельный UIKit проекта -> h(Ai): 0,38

----------------------------------------------------------------

resources path: cases/bltRatings.json

Ranked Alternatives for На каком этапе должен выполняться матчинг данных документа с каталогами поставщика в процессе его подготовки и отправки? (Descending h(Ai)):

resources path: cases/matchingRatings.json

Ranked Alternatives for На каком этапе должен выполняться матчинг данных документа с каталогами поставщика в процессе его подготовки и отправки? (Descending h(Ai)):
1. При создании черновика -> h(Ai): 0,52
2. При отправке документа -> h(Ai): 0,50
3. При каждом редактировании и сохранении черновика -> h(Ai): 0,45

----------------------------------------------------------------

resources path: cases/matchingRatings.json

Ranked Alternatives for На каком этапе должен выполняться матчинг данных документа с каталогами поставщика в процессе его подготовки и отправки? (Descending h(Ai)):
1. При создании черновика -> h(Ai): 0,52
2. При отправке документа -> h(Ai): 0,50
3. При каждом редактировании и сохранении черновика -> h(Ai): 0,45

----------------------------------------------------------------

resources path: cases/matchingRatings.json

Ranked Alternatives for На каком этапе должен выполняться матчинг данных документа с каталогами поставщика в процессе его подготовки и отправки? (Descending h(Ai)):
1. При создании черновика -> h(Ai): 0,52
2. При отправке документа -> h(Ai): 0,50
3. При каждом редактировании и сохранении черновика -> h(Ai): 0,45

----------------------------------------------------------------

resources path: cases/dbirdRatings.json

Ranked Alternatives for От каких проектов наследовать проект DocsBird? (Descending h(Ai)):
1. От BLT -> h(Ai): 0,75
2. От Ediweb -> h(Ai): 0,58
3. От ядра -> h(Ai): 0,56
4. Не наследовать -> h(Ai): 0,29

----------------------------------------------------------------

resources path: cases/matchingRatings.json

Ranked Alternatives for На каком этапе должен выполняться матчинг данных документа с каталогами поставщика в процессе его подготовки и отправки? (Descending h(Ai)):
1. При создании черновика -> h(Ai): 0,52
2. При отправке документа -> h(Ai): 0,50
3. При каждом редактировании и сохранении черновика -> h(Ai): 0,45

----------------------------------------------------------------

resources path: cases/danonRatings.json

Ranked Alternatives for Стоит ли выделять отдельную ветку danon от ветки ediweb (Descending h(Ai)):
1. Вынесение danon в отдельную ветку -> h(Ai): 1,00
2. Работа в ветке ediweb -> h(Ai): 0,00

----------------------------------------------------------------

resources path: cases/testingRatings.json

Ranked Alternatives for Как упростить тестирование проектов (Descending h(Ai)):
1. Добавление дата-атрибутов для компонентов UIKit -> h(Ai): 0,87
2. Добавление классов для компонентов UIKit -> h(Ai): 0,75
3. Добавление специальных меток (полных путей с иерархией) в коде (классы/атрибуты) на конкретных формах -> h(Ai): 0,20

----------------------------------------------------------------

resources path: cases/bltRatings.json

Ranked Alternatives for Как писать UIKit на BLT (Descending h(Ai)):
1. Наследовать UIKit -> h(Ai): 0,68
2. Использовать UIKit ядра -> h(Ai): 0,62
3. Писать отдельный UIKit проекта -> h(Ai): 0,38

----------------------------------------------------------------

resources path: cases/bltRatings.json

Ranked Alternatives for Как писать UIKit на BLT (Descending h(Ai)):
1. Наследовать UIKit -> h(Ai): 0,68
2. Использовать UIKit ядра -> h(Ai): 0,62
3. Писать отдельный UIKit проекта -> h(Ai): 0,38

----------------------------------------------------------------

resources path: testRatings.json

Ranked Alternatives for Выбор стека (Descending h(Ai)):
1. Vue -> h(Ai): 0,97
2. Angular -> h(Ai): 0,38
3. React -> h(Ai): 0,14

----------------------------------------------------------------

